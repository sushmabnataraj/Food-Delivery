/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.EcoSystem;
import Business.Order.Order;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sushm
 */
public class MngOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MngOrdersJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecosystem;
    
    public MngOrdersJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecosystem = ecosystem;        
        viewAndAssignOrdersTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnMOBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMOOrderDetail = new javax.swing.JTable();
        btnMOViewOrder = new javax.swing.JButton();
        btnMOAssignDeliveryMan = new javax.swing.JButton();
        btnMORefresh = new javax.swing.JButton();

        btnMOBack.setBackground(new java.awt.Color(0, 0, 0));
        btnMOBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMOBack.setForeground(new java.awt.Color(255, 255, 255));
        btnMOBack.setText("<");
        btnMOBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMOBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Manage Orders");

        tblMOOrderDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OrderIDnum", "Customer Name", "Address", "Order Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMOOrderDetail);

        btnMOViewOrder.setBackground(new java.awt.Color(0, 0, 0));
        btnMOViewOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnMOViewOrder.setText("View Order");
        btnMOViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMOViewOrderActionPerformed(evt);
            }
        });

        btnMOAssignDeliveryMan.setBackground(new java.awt.Color(0, 0, 0));
        btnMOAssignDeliveryMan.setForeground(new java.awt.Color(255, 255, 255));
        btnMOAssignDeliveryMan.setText("Assign Delivery Man to Order");
        btnMOAssignDeliveryMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMOAssignDeliveryManActionPerformed(evt);
            }
        });

        btnMORefresh.setBackground(new java.awt.Color(0, 0, 0));
        btnMORefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnMORefresh.setText("Refresh");
        btnMORefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMORefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnMOBack)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnMOViewOrder)
                                .addGap(31, 31, 31)
                                .addComponent(btnMOAssignDeliveryMan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnMORefresh))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 70, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnMOAssignDeliveryMan, btnMORefresh, btnMOViewOrder});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMOBack)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMOAssignDeliveryMan)
                    .addComponent(btnMOViewOrder)
                    .addComponent(btnMORefresh))
                .addContainerGap(167, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnMOBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMOBackActionPerformed
        // TODO add your handling code here:userProcessContainer.remove(this);
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnMOBackActionPerformed

    private void btnMOViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMOViewOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMOOrderDetail.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view order details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Order order  = (Order)tblMOOrderDetail.getValueAt(selectedRow, 0);
            OrderDetailJPanel orderDetails=new OrderDetailJPanel(userProcessContainer,account,order,ecosystem);
            userProcessContainer.add("OrderDetails",orderDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }

    }//GEN-LAST:event_btnMOViewOrderActionPerformed

    private void btnMOAssignDeliveryManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMOAssignDeliveryManActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMOOrderDetail.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to assign delivery man to the order","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Order order  = (Order)tblMOOrderDetail.getValueAt(selectedRow, 0);
            DeliveryAssignmentJPanel deliveryManAssignment =new DeliveryAssignmentJPanel(userProcessContainer,account,order,ecosystem);
            userProcessContainer.add("DeliveryManAssignment",deliveryManAssignment);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }

    }//GEN-LAST:event_btnMOAssignDeliveryManActionPerformed

    private void btnMORefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMORefreshActionPerformed
        // TODO add your handling code here:
        viewAndAssignOrdersTable();
    }//GEN-LAST:event_btnMORefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMOAssignDeliveryMan;
    private javax.swing.JButton btnMOBack;
    private javax.swing.JButton btnMORefresh;
    private javax.swing.JButton btnMOViewOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMOOrderDetail;
    // End of variables declaration//GEN-END:variables

    public void viewAndAssignOrdersTable() {
        DefaultTableModel tablemodel = (DefaultTableModel) tblMOOrderDetail.getModel();
        tablemodel.setRowCount(0);
        for (Restaurant restro : ecosystem.getRestaurantDirectory().getRestaurantDirectory()) {
            if (restro.getUserName().equals(account.getUsername())) {
                for (Order order : restro.getOrderList()) {
                    Object[] row = new Object[5];
                    row[0] = order;
                    row[1] = order.getCustomerName();
                    row[2] = order.getAddress();
                    row[3] = order.getOrderAmount();
                    row[4] = order.getStatus();
                    tablemodel.addRow(row);
                }
            }
        }
    }
}
