/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Restaurant.Dishlist;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sushm
 */
public class MenuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MenuJPanel
     */
    private JPanel userProcessContainer;
    private Restaurant restaurant;
    private UserAccount userAccount;
    private EcoSystem ecosystem;
    ArrayList<Dishlist> items=new ArrayList<Dishlist>();
    int sum = 0;
    
    public MenuJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem, Restaurant restaurant) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAccount = account;
        this.restaurant = restaurant;
        displayMenuTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMCMenu = new javax.swing.JTable();
        lblValue = new javax.swing.JLabel();
        lblCart = new javax.swing.JLabel();
        btnMCback = new javax.swing.JButton();
        btnMAddToCart = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMCCart = new javax.swing.JTable();
        btnDeleteFromCart = new javax.swing.JButton();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        btnMOrder = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(243, 248, 249));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblMCMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Name", "Description", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblMCMenu);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 96, 564, 130));

        lblValue.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblValue.setForeground(new java.awt.Color(102, 102, 102));
        lblValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblValue.setText("<value>");
        jPanel1.add(lblValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 23, -1, 30));

        lblCart.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCart.setForeground(new java.awt.Color(102, 102, 102));
        lblCart.setText("Your Cart :");
        jPanel1.add(lblCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 21, 120, 30));

        btnMCback.setBackground(new java.awt.Color(102, 102, 102));
        btnMCback.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMCback.setForeground(new java.awt.Color(255, 255, 255));
        btnMCback.setText("<");
        btnMCback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMCbackActionPerformed(evt);
            }
        });
        jPanel1.add(btnMCback, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, -1, -1));

        btnMAddToCart.setBackground(new java.awt.Color(31, 189, 214));
        btnMAddToCart.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMAddToCart.setForeground(new java.awt.Color(255, 255, 255));
        btnMAddToCart.setText("Move to cart");
        btnMAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMAddToCartActionPerformed(evt);
            }
        });
        jPanel1.add(btnMAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 244, 207, -1));

        tblMCCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Name", "Description", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMCCart);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 295, 564, 130));

        btnDeleteFromCart.setBackground(new java.awt.Color(31, 189, 214));
        btnDeleteFromCart.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDeleteFromCart.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteFromCart.setText("Delete");
        btnDeleteFromCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteFromCartActionPerformed(evt);
            }
        });
        jPanel1.add(btnDeleteFromCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 454, 203, -1));

        lblAddress.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(102, 102, 102));
        lblAddress.setText("Location:");
        jPanel1.add(lblAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 548, 80, -1));
        jPanel1.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 537, 405, 43));

        btnMOrder.setBackground(new java.awt.Color(31, 189, 214));
        btnMOrder.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnMOrder.setText("Order");
        btnMOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMOrderActionPerformed(evt);
            }
        });
        jPanel1.add(btnMOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(604, 547, 82, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnMCbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMCbackActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerAreaJPanel dwjp = (CustomerAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_btnMCbackActionPerformed

    private void btnMAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMAddToCartActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMCMenu.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to add","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Dishlist dishItem=(Dishlist)tblMCMenu.getValueAt(selectedRow, 0);

            fillCartTable(dishItem);

        }

    }//GEN-LAST:event_btnMAddToCartActionPerformed

    private void btnDeleteFromCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteFromCartActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMCCart.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to remove from cart","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Dishlist item=(Dishlist)tblMCCart.getValueAt(selectedRow, 0);
            items.remove(item);
            DefaultTableModel model = (DefaultTableModel) tblMCCart.getModel();
            model.setRowCount(0);
            // commented no use
        }
    }//GEN-LAST:event_btnDeleteFromCartActionPerformed

    private void btnMOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMOrderActionPerformed

        String address=txtAddress.getText();
        restaurant.addOrder(restaurant.getName(), userAccount.getUsername(), null, items, String.valueOf(sum) , address);
        for(Customer cust:ecosystem.getCustomerDirectory().getCustomerDirectory()){
            if(userAccount.getUsername().equals(cust.getUserName())){
                cust.addOrder(restaurant.getName(), userAccount.getUsername(), null, items, String.valueOf(sum) , address);
                JOptionPane.showMessageDialog(null, "You Order placed successfully");
            }
        }

    }//GEN-LAST:event_btnMOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteFromCart;
    private javax.swing.JButton btnMAddToCart;
    private javax.swing.JButton btnMCback;
    private javax.swing.JButton btnMOrder;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCart;
    private javax.swing.JLabel lblValue;
    private javax.swing.JTable tblMCCart;
    private javax.swing.JTable tblMCMenu;
    private javax.swing.JTextField txtAddress;
    // End of variables declaration//GEN-END:variables

    private void fillCartTable(Dishlist dishItem) {
        DefaultTableModel tablemodel = (DefaultTableModel) tblMCCart.getModel();
        tablemodel.setRowCount(0);
        
         items.add(dishItem);
         Object[] row = new Object[3];
                for(Dishlist dish:items){
                     row[0] = dish;
                     row[1] = dish.getDetails();
                     row[2] = dish.getOrderAmount();
                     sum=sum+Integer.parseInt(dish.getOrderAmount());
                     tablemodel.addRow(row);
                }
        
    }

    private void displayMenuTable() {
        DefaultTableModel tablemodel = (DefaultTableModel) tblMCMenu.getModel();
        
            tablemodel.setRowCount(0);
                Object[] row = new Object[3];
                for(Dishlist dish:restaurant.getMenu()){
                     row[0] = dish;
                     row[1] = dish.getDetails();
                     row[2] = dish.getOrderAmount();
                     tablemodel.addRow(row);
                } 
    }
}
